version: '3.9'

services:
  redis:
    image: redis
    container_name: redis
    ports:
      - '6379:6379'
    restart: unless-stopped
    command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
    networks:
      - cartera-network-dev

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: app
    entrypoint: >
      sh -c "dockerize -wait tcp://redis:6379 -timeout 30s && exec yarn start:dev"
    networks:
      - cartera-network-dev
    restart: unless-stopped
    volumes:
      - .:/usr/src/app
    tty: true
    ports:
      - '${PORT}:${PORT}'
    env_file:
      - .env.docker.env
    expose:
      - '${PORT}'
    depends_on:
      - redis
    environment:
      REDIS_HOST_NAME: redis
      REDIS_HOST_PORT: 6379
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl',
          '-f',
          'http://localhost:${PORT}/api/ping || exit 1',
        ]
      interval: 10s
      retries: 5

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    container_name: nginx
    entrypoint: >
      sh -c "dockerize -wait tcp://app:8889 -timeout 30s && nginx -g 'daemon off;'"
    ports:
      - '80:80'
    restart: always
    networks:
      - cartera-network-dev
    depends_on:
      app:
        condition: service_healthy

networks:
  cartera-network-dev:
    driver: bridge
