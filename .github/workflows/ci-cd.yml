name: Cartera-Backend CI-CD

on:
  pull_request:
    branches: ['main']

jobs:
  build:
    name: 'ğŸš€ Build & Test'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      CI: true
    outputs:
      tests-passed: ${{ steps.unit-tests.outcome == 'success' }}
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: Check origem do PR
        run: |
          if [[ "${{ github.base_ref }}" == "main" && "${{ github.head_ref }}" != "test" ]]; then
            echo "Erro: Apenas podem ser abertos PRs para branch MAIN a partir da branch TEST."
            exit 1
          fi

          if [[ "${{ github.base_ref }}" == "test" && "${{ github.head_ref }}" != "dev" ]]; then
            echo "Erro: Apenas podem ser abertos PRs para branch TEST a partir da branch DEV."
            exit 1
          fi
        shell: bash

      - name: ConfiguraÃ§Ã£o do Node ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Criando .env
        run: |
          echo "PORT=${{ env.PORT }}" >> .env
          echo "SWAGGER_HOST=${{ env.SWAGGER_HOST }}" >> .env
          echo "FIREBASE_CONFIG_API_KEY=${{ secrets.FIREBASE_CONFIG_API_KEY }}" >> .env
          echo "FIREBASE_CONFIG_AUTH_DOMAIN=${{ secrets.FIREBASE_CONFIG_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_CONFIG_PROJECT_ID=${{ secrets.FIREBASE_CONFIG_PROJECT_ID }}" >> .env
          echo "FIREBASE_CONFIG_STORAGE_BUCKET=${{ secrets.FIREBASE_CONFIG_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_CONFIG_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_CONFIG_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_CONFIG_APP_ID=${{ secrets.FIREBASE_CONFIG_APP_ID }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_TYPE=${{ secrets.FIREBASE_SERVICE_ACCOUNT_TYPE }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_PROJECT_ID=${{ secrets.FIREBASE_SERVICE_ACCOUNT_PROJECT_ID }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY_ID=${{ secrets.FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY_ID }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY=${{ secrets.FIREBASE_SERVICE_ACCOUNT_PRIVATE_KEY }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL=${{ secrets.FIREBASE_SERVICE_ACCOUNT_CLIENT_EMAIL }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_CLIENT_ID=${{ secrets.FIREBASE_SERVICE_ACCOUNT_CLIENT_ID }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_AUTH_URI=${{ secrets.FIREBASE_SERVICE_ACCOUNT_AUTH_URI }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_TOKEN_URI=${{ secrets.FIREBASE_SERVICE_ACCOUNT_TOKEN_URI }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_AUTH_PROVIDER_URL=${{ secrets.FIREBASE_SERVICE_ACCOUNT_AUTH_PROVIDER_URL }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_CLIENT_URL=${{ secrets.FIREBASE_SERVICE_ACCOUNT_CLIENT_URL }}" >> .env
          echo "FIREBASE_SERVICE_ACCOUNT_UNIVERSE_DOMAIN=${{ secrets.FIREBASE_SERVICE_ACCOUNT_UNIVERSE_DOMAIN }}" >> .env
          echo "REDIS_HOST_NAME=${{ secrets.REDIS_HOST_NAME }}" >> .env
          echo "REDIS_HOST_PORT=${{ secrets.REDIS_HOST_PORT }}" >> .env
          echo "REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
        shell: bash

      - name: Instalando as dependÃªncias
        run: yarn install --frozen-lockfile

      - name: Verificando Lint
        run: yarn lint
        continue-on-error: false

      - name: Analisando Testes UnitÃ¡rios
        id: unit-tests
        run: yarn test:ci:unit
        continue-on-error: false
